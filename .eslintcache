[{"C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\index.js":"1","C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\App\\App.js":"2","C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\App\\Components\\Body.js":"3","C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\App\\Components\\Header.js":"4","C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\App\\Components\\TutCard.js":"5","C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\App\\Components\\AddTut.js":"6"},{"size":386,"mtime":1615022196613,"results":"7","hashOfConfig":"8"},{"size":299,"mtime":1615042672394,"results":"9","hashOfConfig":"8"},{"size":1200,"mtime":1615042926428,"results":"10","hashOfConfig":"8"},{"size":185,"mtime":1614968051083,"results":"11","hashOfConfig":"8"},{"size":1575,"mtime":1615014192905,"results":"12","hashOfConfig":"8"},{"size":3555,"mtime":1615022832703,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"422oil",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\index.js",[],["28","29"],"C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\App\\App.js",[],"C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\App\\Components\\Body.js",[],"C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\App\\Components\\Header.js",[],"C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\App\\Components\\TutCard.js",[],"C:\\Users\\Anurag Gharat\\Desktop\\Work\\tut-tracker\\src\\App\\Components\\AddTut.js",["30"],"import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport Chips from \"react-chips\";\r\n\r\nexport default function AddTut(props) {\r\n  const [chips, setChips] = useState([]);\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    link: \"\",\r\n    note: \"\",\r\n    status: \"\",\r\n    priority: \"\",\r\n  });\r\n\r\n  console.log(values);\r\n  console.log(chips);\r\n  const onChange = (chips) => {\r\n    setChips(chips);\r\n  };\r\n\r\n  const onTextChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = () => {};\r\n  return (\r\n    <div>\r\n      <Modal isOpen={props.modal} toggle={props.toggle}>\r\n        <ModalHeader>Add a new Tutorial</ModalHeader>\r\n        <ModalBody>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control my-2\"\r\n                id=\"name\"\r\n                placeholder=\"Tutorial Name\"\r\n                name=\"name\"\r\n                value={values.name}\r\n                onChange={(e) => onTextChange(e)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control my-2\"\r\n                id=\"link\"\r\n                placeholder=\"Tutorial Link\"\r\n                value={values.link}\r\n                name=\"link\"\r\n                onChange={(e) => onTextChange(e)}\r\n              />\r\n              <textarea\r\n                className=\"form-control  my-2\"\r\n                id=\"note\"\r\n                rows=\"3\"\r\n                placeholder=\"Note\"\r\n                name=\"note\"\r\n                value={values.note}\r\n                onChange={(e) => onTextChange(e)}\r\n              ></textarea>\r\n              <select\r\n                id=\"category\"\r\n                className=\"form-control my-2\"\r\n                name=\"status\"\r\n                defaultValue={values.status}\r\n                onChange={(e) => onTextChange(e)}\r\n              >\r\n                <option value={values.status}>Set Status</option>\r\n                <option value=\"To Start\">To Start</option>\r\n                <option value=\"Not Set\">Not set</option>\r\n                <option value=\"Ongoing\">Ongoing</option>\r\n                <option value=\"Done\">Done</option>\r\n              </select>\r\n              <select\r\n                id=\"status\"\r\n                className=\"form-control my-2\"\r\n                name=\"priority\"\r\n                defaultValue={values.priority}\r\n                onChange={(e) => onTextChange(e)}\r\n              >\r\n                <option defaultValue={values.priority}>Priority</option>\r\n                <option value=\"High\">High</option>\r\n                <option value=\"Moderate\">Moderate</option>\r\n                <option value=\"Low\">Low</option>\r\n                <option value=\"Not set\">Not set</option>\r\n              </select>\r\n              <Chips\r\n                value={chips}\r\n                onChange={onChange}\r\n                placeholder=\"Add relevent tags!\"\r\n                className=\"form-control\"\r\n                suggestions={[\r\n                  \"React\",\r\n                  \"Vue\",\r\n                  \"Angular\",\r\n                  \"Node\",\r\n                  \"Express\",\r\n                  \"MongoDb\",\r\n                ]}\r\n              />\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={props.toggle}>\r\n            Add\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":26,"column":9,"nodeType":"37","messageId":"38","endLine":26,"endColumn":17},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'onSubmit' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]